package dao;

import dao.mappers.RepairMapper;
import dao.uow.IUnitOfWork;
import domain.Profile;
import domain.Repair;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

public class RepairRepository extends RepositoryBase<Repair>
        implements IRepairRepository {

    public RepairRepository(Connection connection, RepairMapper mapper, IRepository<Profile> profileRepo, IUnitOfWork uow){
        super(connection, mapper, uow);
        mapper.setProfileRepo(profileRepo);
    }

    @Override
    protected String tableName() {
        return "Repair";
    }
    @Override
    protected String createTableSql() {
        return   "CREATE TABLE Repair(" +
                "ID int GENERATED BY DEFAULT AS IDENTITY," +
                "ProfileID int," +
                "NameOfDevice VARCHAR(50)," +
                "DateOfAcceptance date," +
                "ExpectedDateOfReception date," +
                "Price int" +
                ")";
    }

    protected String insertSql() {
        return "INSERT INTO Repair(Profile_ID,  NameOfDeviceInRepair, StartRepairDate, EndRepairDate, Price) VALUES (?, ?, ?, ?, ?)";
    }
    @Override
    protected String deleteSql() {
        return "DELETE FROM Repair WHERE ID = ?";
    }
    @Override
    protected String updateSql() {
        return "UPDATE Repair set Profile_ID = ?, NameOfDeviceInRepair = ?, StartRepairDate = ?, EndRepairDate = ?, Price = ? WHERE ID = ?";
    }
    @Override
    protected String selectByIdSql() {
        return "SELECT * FROM Repair WHERE id=?";
    }
    @Override
    protected String selectAllSql() {
        return "SELECT * FROM Repair";
    }

    @Override
    protected void setupInsert(Repair entity) throws SQLException {
        insert.setInt(1, entity.getProfileID());
        insert.setString(2, entity.getNameOfDeviceInRepair());
        insert.setDate(3, entity.getStartRepairDate());
        insert.setDate(4, entity.getEndRepairDate());
        insert.setInt(5, entity.getPrice());
    }

    @Override
    protected void setupUpdate(Repair entity) throws SQLException {
        update.setInt(1, entity.getId());
        update.setInt(2, entity.getProfileID());
        update.setString(3, entity.getNameOfDeviceInRepair());
        update.setDate(4, entity.getStartRepairDate());
        update.setDate(5, entity.getEndRepairDate());
        update.setInt(6, entity.getPrice());
    }


    public List<Repair> byProfile(Profile profile) {
        return null;
    }
}
